- hosts: all
  become: yes
  tasks:
    - fail:
       msg: "OS should be Debian 12, not {{ ansible_distribution }} {{ ansible_distribution_version }}"
      when: ansible_distribution != 'Ubuntu' or ansible_distribution_version != '24.04' or ansible_architecture != 'aarch64'

    - name: update APT packages
      apt:
        update_cache: yes
        upgrade: yes
    - name: Install longhorn deps
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - open-iscsi
        - nfs-common
    - name: Check if reboot required
      stat:
        path: /var/run/reboot-required
      register: reboot_required_file

    - name: Reboot if required
      reboot:
      when: reboot_required_file.stat.exists == true

    - name: disable SWAP (Kubeadm requirement)
      shell: |
        swapoff -a

    - name: create an empty file for the CRI-O module
      copy:
        content: ""
        dest: /etc/modules-load.d/crio.conf
        force: no

    - name: configure modules for CRI-O
      blockinfile:
        path: /etc/modules-load.d/crio.conf
        block: |
             overlay
             br_netfilter
    - name: Enable container features
      replace:
        path: /boot/firmware/cmdline.txt
        regexp: '^([\w](?!.*\b{{ item }}\b).*)$'
        replace: '\1 {{ item }}'
      with_items:
      - "cgroup_enable=cpuset"
      - "cgroup_memory=1"
      - "cgroup_enable=memory"

    - name: create an empty file for Kubernetes sysctl params
      copy:
        content: ""
        dest: /etc/sysctl.d/99-kubernetes-cri.conf
        force: no

    - name: configure sysctl params for Kubernetes
      lineinfile:
        path: /etc/sysctl.d/99-kubernetes-cri.conf
        line: "{{ item }}"
      with_items:
        - 'net.bridge.bridge-nf-call-iptables  = 1'
        - 'net.ipv4.ip_forward                 = 1'
        - 'net.bridge.bridge-nf-call-ip6tables = 1'

    - name: apply sysctl params without reboot
      command: sysctl --system

    - name: install APT Transport HTTPS
      apt:
        name: apt-transport-https
        state: present

    - name: add CRI-O apt-key
      get_url:
        url: https://pkgs.k8s.io/addons:/cri-o:/stable:/v1.30/deb/Release.key
        dest: /etc/apt/keyrings/cri-o-apt-keyring.asc
        mode: '0644'
        force: true

    - name: add CRI-O's APT repository
      apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/cri-o-apt-keyring.asc] https://pkgs.k8s.io/addons:/cri-o:/stable:/v1.30/deb/ /"
        state: present
        update_cache: yes

    - name: add Kubernetes apt-key
      get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key
        dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
        mode: '0644'
        force: true

    - name: add Kubernetes' APT repository
      apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /"
        state: present
        update_cache: yes

    - name: install CRI-O
      apt:
        name: cri-o
        state: present

    - name: enable the CRI-O service and start it
      systemd:
        name: crio
        state: restarted
        enabled: yes
        daemon-reload: yes

    - name: install Kubelet
      apt:
        name: kubelet
        state: present
        update_cache: true

    - name: install Kubeadm
      apt:
        name: kubeadm
        state: present

    - name: enable the Kubelet service, and enable it persistently
      service:
        name: kubelet
        enabled: yes

    - name: load br_netfilter kernel module
      modprobe:
        name: br_netfilter
        state: present

    - name: set bridge-nf-call-iptables
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1

    - name: set ip_forward
      sysctl:
        name: net.ipv4.ip_forward
        value: 1

    - name: reboot and wait for reboot to complete
      reboot:

- hosts: master
  become: yes
  tasks:
    - name: install Kubectl
      apt:
        name: kubectl
        state: present
        force: yes # allow downgrades
